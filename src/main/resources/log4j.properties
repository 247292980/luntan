#第一个参数定义达到什么程度就输出 第二第三....第N 定义输出的类型
#debug<info<worn<error<fatal
#闲的蛋疼的时候变成debug看看 会显示一些没有自己手动close的东西 不影响代码 但影响代码逻辑
log4j.rootLogger=info, stdout  ,R

### direct log messages to stdout ###
#stdout和日志台绑定
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out

#用什么格式类型
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

#描述格式
#%-d{yyyy-MM-dd HH\:mm\:ss} %5p    %c{1}    :%L - %m         %n
#2017-07-08 19:36:57        ERROR Log4jUtil:75 - 【错误类型】描述错误
log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} %5p %c{1}:%L - %m%n

# org.apache.log4j.ConsoleAppender（控制台）
# org.apache.log4j.FileAppender（文件）
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

###  R is set to be a DailyRollingFileAppender.###
log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} [%p] %c - %m%n
#在目录下生成一个日志文件 大小100K
#log4j.appender.R.MaxFileSize=100KB
#使用相对地址写log
log4j.appender.R.File=log\\luntan.log

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
### set log levels - for more verbose logging change 'info' to 'debug' ###
#log4j.logger.org.hibernate=info
log4j.logger.org.hibernate=debug  
### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug
### log just the SQL
#log4j.logger.org.hibernate.SQL=debug
### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=info  
#log4j.logger.org.hibernate.type=debug
### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=debug  
### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug
### log cache activity ###
#log4j.logger.org.hibernate.cache=debug
### log transaction activity
#log4j.logger.org.hibernate.transaction=debug
### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug
### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace